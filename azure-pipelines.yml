name: WeatherAppLayout

variables:
  name: NpmFeed
  value: 0995c973-a0a3-41c9-acbf-fca1ecf95883/d11ab0f1-e9d8-4188-b43a-7fdc976862de

trigger:
  - master

jobs:
  - job: Default
    pool:
      vmImage: ubuntu-22.04
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: "20.x"
        displayName: "Install Node.js"

      - task: npmAuthenticate@0
        inputs:
          workingFile: .npmrc

      - script: npm install -g @angular/cli
        displayName: "Install Angular CLI"

      - task: Npm@1
        displayName: NPM Install
        inputs:
          command: install
          customFeed: $(NpmFeed)

      - script: npm run lint
        displayName: "Check Linting"

      - script: npm run test:ci
        displayName: "Run Unittests"

      - script: npm run build
        displayName: "Build"

      - task: UsePythonVersion@0
        displayName: "Set python version"
        inputs:
          versionSpec: "3.8"

      - download: VersioningTool
        displayName: Download versioning tool
        artifact: versioning-tool

      - task: CmdLine@2
        displayName: Run versioning tool
        inputs:
          script: |
            set -ex
            chmod +x $(Pipeline.Workspace)/VersioningTool/versioning-tool/versioning-tool
            $(Pipeline.Workspace)/VersioningTool/versioning-tool/versioning-tool
        env:
          AZ_PAT: $(System.AccessToken)

      - download: current
        displayName: Download version report
        artifact: Versions

      - task: CmdLine@2
        displayName: Copy bundle files
        inputs:
          script: |
            set -ex
            mkdir -pv $(Build.ArtifactStagingDirectory)/WebApps/webapps.weatherApp
            cp -r $(Build.SourcesDirectory)/dist/weather-app/* $(Build.ArtifactStagingDirectory)/WebApps/webapps.weatherApp
            cp $(Build.SourcesDirectory)/bundle-description.json $(Build.ArtifactStagingDirectory)/WebApps
            cp -r $(Build.SourcesDirectory)/thumbnail.svg $(Build.ArtifactStagingDirectory)/WebApps
            cp $(Pipeline.Workspace)/Versions/versions.json $(Build.ArtifactStagingDirectory)/WebApps

      - task: ArchiveFiles@2
        displayName: Package files
        inputs:
          rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/WebApps"
          includeRootFolder: true
          archiveType: "zip"
          archiveFile: "$(Build.ArtifactStagingDirectory)/WeatherApp-$(Build.BuildNumber).zip"
          replaceExistingArchive: true

      - task: PublishPipelineArtifact@1
        displayName: Publish bundle
        inputs:
          path: "$(Build.ArtifactStagingDirectory)/WeatherApp-$(Build.BuildNumber).zip"
          artifactName: "layouts"
